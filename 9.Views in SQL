--TABLES AND there respective data:

Create the employees table
CREATE TABLE employees (
    employee_id SERIAL PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    email VARCHAR(100),
    department_id INT,
    job_id INT,
    salary NUMERIC,
    hire_date DATE
);

-- Insert sample data into the employees table
INSERT INTO employees (first_name, last_name, email, department_id, job_id, salary, hire_date) VALUES
('John', 'Doe', 'john.doe@example.com', 1, 1, 50000, '2020-01-15'),
('Alice', 'Smith', 'alice.smith@example.com', 2, 2, 60000, '2019-05-20'),
('Bob', 'Johnson', 'bob.johnson@example.com', 1, 3, 55000, '2021-03-10');

-- Create the departments table
CREATE TABLE departments (
    department_id SERIAL PRIMARY KEY,
    department_name VARCHAR(100)
);

-- Insert sample data into the departments table
INSERT INTO departments (department_name) VALUES
('Sales'),
('Marketing'),
('Finance');

-- Create the jobs table
CREATE TABLE jobs (
    job_id SERIAL PRIMARY KEY,
    job_title VARCHAR(100)
);

-- Insert sample data into the jobs table
INSERT INTO jobs (job_title) VALUES
('Sales Associate'),
('Marketing Coordinator'),
('Financial Analyst');

--//////////////////////////////////////////////////////////

-- Task :
-- Employee Information View:
-- Create a view named employee_info that includes the following columns:
--  Employee ID
--  Full Name (concatenation of first name and last name)
--  Email Address
--  Department Name
--  Job Title
--  Salary
--  Hire Date
-- The view should join the employees, departments, and jobs tables to retrieve the necessary information


create or replace view myview as 
select e.employee_id ,
e.first_name ||' '|| e.last_name as fullname,
e.email as mail,d.department_name as dname,
j.job_title as job,e.salary as salary ,e.hire_date as joining

from employees e
join departments d  USING (department_id)
join jobs j  using (job_id);


select * from myview;

--//////////////////////////////////////////////////////////

-- task:Question: How would you create a view that lists employees 
-- along with their department names and job titles, sorted by their
-- hire dates in ascending order?


create or replace view myview2 as
select e.first_name ||' '|| e.last_name as fullname,
d.department_name,j.job_title
from employees e 
join departments d on e.department_id = d.department_id
join jobs j using (job_id)
order by e.hire_date asc;

select * from myview2;
